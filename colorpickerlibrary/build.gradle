/*
 * Copyright 2020 Gerard Bradshaw
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.sdkVersionInformation.compileSdkVersion
    buildToolsVersion rootProject.ext.miscVersionInformation.androidBuildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.sdkVersionInformation.minSdkVersion
        targetSdkVersion rootProject.ext.sdkVersionInformation.targetSdkVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
}

ext.releaseInfo = [
    group: rootProject.ext.mavenReleaseInformation.groupId,
    artifactId: 'colorpicker',
    version: '2.0.2',

    name: 'Color Picker',
    description: 'A library of Views for RGB color selection.',
    url: 'https://www.github.com/GerardBradshaw/ColorPicker',
    scmUrl: 'https://www.github.com/GerardBradshaw/ColorPicker',

    license: [
        name: 'The Apache Software License, Version 2.0',
        url: 'https://www.apache.org/licenses/LICENSE-2.0.txt']
]

apply from: rootProject.file('release-android-library.gradle')

task deleteOutputDirectories {
  delete('build')
  delete('out')
}