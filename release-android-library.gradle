/*
 * Copyright 2018 Matthew David Tamlin
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'maven'

def localReleaseDirectory = "${buildDir}/release/${project.ext.releaseInfo.version}"

task zipRelease(type: Zip, dependsOn: 'uploadArchives') {
  from localReleaseDirectory
  destinationDir buildDir
  archiveName "release-${project.ext.releaseInfo.version}.zip"
}

task buildRelease(dependsOn: 'zipRelease') {
  doLast {
    println 'Release \'' +
        "$project.ext.releaseInfo.group:" +
        "$project.ext.releaseInfo.artifactId:" +
        "$project.ext.releaseInfo.version" +
        "\' can be found at ${localReleaseDirectory}/"
  }
}

afterEvaluate { project ->
  uploadArchives {
    repositories {
      mavenDeployer {
        repository(url: "file://${localReleaseDirectory}")

        pom.groupId = project.ext.releaseInfo.group
        pom.artifactId = project.ext.releaseInfo.artifactId
        pom.version = project.ext.releaseInfo.version

        pom.project {
          name project.ext.releaseInfo.name
          packaging 'aar'
          description project.ext.releaseInfo.description
          url project.ext.releaseInfo.url

          licenses {
            license {
              name project.ext.releaseInfo.license.name
              url project.ext.releaseInfo.license.url
            }
          }

          scm {
            url project.ext.releaseInfo.url
          }
        }
      }
    }
  }

  task install(type: Upload, dependsOn: assemble) {
    repositories.mavenInstaller {
      configuration = configurations.archives

      pom.groupId = project.ext.releaseInfo.group
      pom.artifactId = project.ext.releaseInfo.artifactId
      pom.version = project.ext.releaseInfo.version

      pom.project {
        name project.ext.releaseInfo.name
        packaging 'aar'
        description project.ext.releaseInfo.description
        url project.ext.releaseInfo.url

        licenses {
          license {
            name project.ext.releaseInfo.license.name
            url project.ext.releaseInfo.license.url
          }
        }

        scm {
          url project.ext.releaseInfo.url
        }
      }
    }
  }

  task androidJavadocs(type: Javadoc) {
    failOnError false // add this line
    source = android.sourceSets.main.java.source
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
  }

  task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
  }

  task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.source
  }

  if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
      tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
      }
    }
  }

  artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
  }
}